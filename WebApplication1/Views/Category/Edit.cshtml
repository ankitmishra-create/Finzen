@model FinanceManagement.Application.ViewModels.AddCategoryVM
@using FinanceManagement.Core.Enums
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    ViewData["Title"] = "Edit Category";

    // --- IMPROVEMENT ---
    // Using the enum's string name for the value is more robust than using its integer value.
    var categoryTypes = Enum.GetValues(typeof(CategoryType))
                            .Cast<CategoryType>()
                            .Select(e => new SelectListItem { Value = e.ToString(), Text = e.ToString() })
                            .ToList();

    var investmentSubtypes = Enum.GetValues(typeof(SubType))
                                 .Cast<SubType>()
                                 .Select(e => new SelectListItem { Value = e.ToString(), Text = e.ToString() })
                                 .ToList();
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-sm rounded-4 border-0">
                <div class="card-body p-4 p-md-5">
                    <h3 class="card-title text-center mb-4 fw-bold">Edit Category</h3>

                    <form asp-controller="Category" asp-action="Edit" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3" role="alert"></div>

                        @* The hidden input for the ID is crucial for the update to work *@
                        <input type="hidden" asp-for="Id" />

                        <div class="mb-3">
                            <label asp-for="CategoryName" class="form-label required-field"></label>
                            <input asp-for="CategoryName" class="form-control" />
                            <span asp-validation-for="CategoryName" class="text-danger small"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="CategoryType" class="form-label required-field"></label>
                            <select asp-for="CategoryType" class="form-select" asp-items="categoryTypes" id="categoryTypeDropdown"></select>
                            <span asp-validation-for="CategoryType" class="text-danger small"></span>
                        </div>

                        <div class="mb-3" id="subtypeContainer" style="display:none;">
                            <label asp-for="SubType" class="form-label required-field"></label>
                            <select asp-for="SubType" class="form-select" asp-items="investmentSubtypes">
                                <option value="">-- Select a Sub-Type --</option>
                            </select>
                            <span asp-validation-for="SubType" class="text-danger small"></span>
                        </div>

                        <div class="d-grid mt-4">
                            <button type="submit" class="btn btn-primary btn-lg">Save Changes</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        <partial name="_ValidationScriptsPartial" />
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const categoryTypeDropdown = document.getElementById("categoryTypeDropdown");
            const subtypeContainer = document.getElementById("subtypeContainer");
            const subtypeLabel = subtypeContainer.querySelector('label');

            function toggleSubtype() {
                // --- IMPROVEMENT ---
                // Checking against the string "Investment" is safer than checking against the number 3.
                if (categoryTypeDropdown.value === "Investment") {
                    subtypeContainer.style.display = "block";
                } else {
                    subtypeContainer.style.display = "none";
                }
            }

            // Add event listener and run on page load to set the correct initial state.
            categoryTypeDropdown.addEventListener("change", toggleSubtype);
            toggleSubtype();
        });
    </script>
}
