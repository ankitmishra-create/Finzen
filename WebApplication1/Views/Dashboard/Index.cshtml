@using FinanceManagement.Application.Utility
@using FinanceManagement.Core.Entities
@using FinanceManagement.Core.Enums
@model IEnumerable<Transaction>

@{
    ViewData["Title"] = "Dashboard";
}

@* This updated CSS uses Container Queries for a truly robust and responsive font size *@
<style>
    /* 1. Define the card as a query container */
    .summary-card {
        container-type: inline-size;
    }

    .summary-card-icon {
        position: absolute;
        top: 1rem;
        right: 1.5rem;
        font-size: 3rem;
        opacity: 0.2;
        transition: all 0.3s ease-in-out;
    }

    .summary-card:hover .summary-card-icon {
        opacity: 0.4;
        transform: scale(1.1);
    }

    /* 2. Make the font size responsive to its container */
    .amount-display {
        white-space: nowrap; /* Keep the number on a single line */
        /* The font size is now based on the card's width (cqw), not the viewport's (vw) */
        /* It will shrink aggressively to fit extremely long numbers. */
        font-size: clamp(0.9rem, 8cqw, 2.5rem);
        line-height: 1.2;
    }
</style>

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h1 class="mb-0">Dashboard</h1>
        <p class="text-muted mb-0">An overview of your financial activity.</p>
    </div>

    <div class="d-flex align-items-center gap-2">
        <label for="currencySelector" class="form-label mb-0 small text-muted">Currency:</label>
        <form asp-controller="Dashboard" asp-action="Index" method="post" class="d-flex align-items-center gap-2">
            <select name="selectedCurrencyCode" id="currencySelector"
                    class="form-select form-select-sm" style="width: 160px;"
                    onchange="this.form.submit()">
                @if (ViewBag.CurrencyList != null)
                {
                    var currencyList = ViewBag.CurrencyList as List<FinanceManagement.Application.Utility.CurrencyRecords>;
                    var userCurrencyCode = ViewBag.UserCurrencyCode as string;

                    foreach (var currency in currencyList)
                    {
                        <option value="@currency.CurrencyCode"
                                selected="@(currency.CurrencyCode == userCurrencyCode)">
                            @currency.CurrencyName (@currency.CurrencySymbol)
                        </option>
                    }
                }
            </select>
        </form>
    </div>
</div>

<div class="row">
    <div class="col-md-4 mb-3">
        <div class="card h-100 summary-card bg-success-subtle border-success shadow-sm position-relative">
            <div class="card-body p-4">
                <div class="summary-card-icon text-success">
                    <i class="bi bi-arrow-up-circle"></i>
                </div>
                <h6 class="card-title text-success-emphasis mb-1">TOTAL INCOME</h6>
                <h3 class="fw-bold text-success-emphasis mb-0 amount-display">
                    @ViewBag.CurrencySymbol @(((decimal)ViewBag.Income).ToString("N2"))
                </h3>
            </div>
        </div>
    </div>

    <div class="col-md-4 mb-3">
        <div class="card h-100 summary-card bg-danger-subtle border-danger shadow-sm position-relative">
            <div class="card-body p-4">
                <div class="summary-card-icon text-danger">
                    <i class="bi bi-arrow-down-circle"></i>
                </div>
                <h6 class="card-title text-danger-emphasis mb-1">TOTAL EXPENSE</h6>
                <h3 class="fw-bold text-danger-emphasis mb-0 amount-display">
                    @ViewBag.CurrencySymbol @(((decimal)ViewBag.Expense).ToString("N2"))
                </h3>
            </div>
        </div>
    </div>

    <div class="col-md-4 mb-3">
        <div class="card h-100 summary-card bg-primary-subtle border-primary shadow-sm position-relative">
            <div class="card-body p-4">
                <div class="summary-card-icon text-primary">
                    <i class="bi bi-wallet2"></i>
                </div>
                <h6 class="card-title text-primary-emphasis mb-1">BALANCE AVAILABLE</h6>
                <h3 class="fw-bold text-primary-emphasis mb-0 amount-display">
                    @ViewBag.CurrencySymbol @(((decimal)ViewBag.Available).ToString("N2"))
                </h3>
            </div>
        </div>
    </div>
</div>

<div class="mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-light d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Recent Transactions</h5>
            <div class="d-flex gap-2">
                <a asp-controller="Transaction" asp-action="Index" class="btn btn-sm btn-outline-primary">Manage Transactions</a>
                <a asp-controller="Category" asp-action="Index" class="btn btn-sm btn-outline-secondary">Manage Categories</a>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th class="ps-3">Category Type</th>
                            <th>Category Name</th>
                            <th>Description</th>
                            <th>Transaction Date</th>
                            <th class="text-end pe-3">Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            @foreach (var item in Model)
                            {
                                var amountPrefix = item.Category.CategoryType == CategoryType.Income ? "+" : "-";
                                <tr>
                                    <td class="ps-3">
                                        <span class="badge @(item.Category.CategoryType.ToString() == "Income" ? "bg-success-subtle text-success-emphasis" : "bg-danger-subtle text-danger-emphasis")">
                                            @item.Category.CategoryType
                                        </span>
                                    </td>
                                    <td>@item.Category.CategoryName</td>
                                    <td>@item.Description</td>
                                    <td>@item.TransactionDate?.ToShortDateString()</td>
                                    <td class="text-end pe-3 fw-bold @(item.Category.CategoryType.ToString() == "Income" ? "text-success" : "text-danger")">
                                        @amountPrefix @ViewBag.CurrencySymbol @item.Amount?.ToString("N2")
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="5" class="text-center text-muted p-4">No recent transactions found.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>