@using FinanceManagement.Application.ViewModels
@using FinanceManagement.Core.Enums
@model AddTransactionVM

@{
    ViewData["Title"] = "Create Transaction";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-10 col-lg-8">
            <div class="card shadow rounded-4 border-0">
                <div class="card-body p-4 p-md-5">
                    <h3 class="card-title text-center mb-4 fw-bold">Add a New Transaction</h3>

                    <form method="post" asp-action="Create">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3" role="alert"></div>
                        <input type="hidden" asp-for="UserId" />

                        <!-- Transaction Timeline (One-Time / Recurring) -->
                        <div class="mb-3">
                            <label asp-for="TransactionTimeLine" class="form-label required-field"></label>
                            <div class="d-flex gap-3">
                                <!-- One-Time -->
                                <div class="flex-fill">
                                    <input class="btn-check"
                                           type="radio"
                                           asp-for="TransactionTimeLine"
                                           value="OneTime"
                                           id="timeline_OneTime"
                                           checked />
                                    <label class="btn btn-outline-primary w-100 p-3 text-center" for="timeline_OneTime">
                                        <span class="fw-bold d-block">One-Time Payment</span>
                                    </label>
                                </div>
                                <!-- Recurring -->
                                <div class="flex-fill">
                                    <input class="btn-check"
                                           type="radio"
                                           asp-for="TransactionTimeLine"
                                           value="Recurring"
                                           id="timeline_Recurring" />
                                    <label class="btn btn-outline-success w-100 p-3 text-center" for="timeline_Recurring">
                                        <span class="fw-bold d-block">Recurring Payment</span>
                                    </label>
                                </div>
                            </div>
                            <span asp-validation-for="TransactionTimeLine" class="text-danger small"></span>
                        </div>

                        <!-- Recurrence Frequency (Conditionally Shown) -->
                        <div class="mb-3" id="frequencyContainer" style="display:none;">
                            <label asp-for="RecurrenceFrequency" class="form-label required-field"></label>
                            <select asp-for="RecurrenceFrequency"
                                    asp-items="ViewBag.RecurrenceFrequency"
                                    class="form-select border rounded shadow-sm"
                                    id="frequencySelect">
                                <option value="">-- Select Frequency --</option>
                            </select>
                            <span asp-validation-for="RecurrenceFrequency" class="text-danger small"></span>
                        </div>

                        <!-- Territory & Currency -->
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="TransactionTerrority" class="form-label required-field"></label>
                                    <select asp-for="TransactionTerrority"
                                            asp-items="Html.GetEnumSelectList<TransactionTerrority>()"
                                            class="form-select border rounded shadow-sm"
                                            id="territorySelect">
                                    </select>
                                    <span asp-validation-for="TransactionTerrority" class="text-danger small"></span>
                                </div>
                            </div>

                            <div class="col-md-6" id="currencyContainer" style="display:none;">
                                <div class="mb-3">
                                    <label asp-for="SelectedCurrency" class="form-label"></label>
                                    <select asp-for="SelectedCurrency"
                                            class="form-select border rounded shadow-sm"
                                            asp-items="ViewBag.Available">
                                        <option value="">-- Select Currency --</option>
                                    </select>
                                    <span asp-validation-for="SelectedCurrency" class="text-danger small"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Amount & Date -->
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Amount" class="form-label required-field"></label>
                                    <input asp-for="Amount" class="form-control border rounded shadow-sm" placeholder="0.00" />
                                    <span asp-validation-for="Amount" class="text-danger small"></span>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="TransactionDate" class="form-label required-field"></label>
                                    <input asp-for="TransactionDate" type="date"
                                           class="form-control border rounded shadow-sm"
                                           value="@DateTime.Today.ToString("yyyy-MM-dd")"
                                           max="@DateTime.Today.ToString("yyyy-MM-dd")" />
                                    <span asp-validation-for="TransactionDate" class="text-danger small"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Category Type & Category -->
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="CategoryType" class="form-label required-field"></label>
                                    <select asp-for="CategoryType" class="form-select border rounded shadow-sm" id="categoryTypeSelect">
                                        <option value="">-- Select Type --</option>
                                        <option value="Income">Income</option>
                                        <option value="Expense">Expense</option>
                                    </select>
                                    <span asp-validation-for="CategoryType" class="text-danger small"></span>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="CategoryId" class="form-label required-field"></label>
                                    <select asp-for="CategoryId" class="form-select border rounded shadow-sm" id="categorySelect">
                                        <option value="">-- Select Category --</option>
                                        @if (Model.Categories != null)
                                        {
                                            foreach (var category in Model.Categories)
                                            {
                                                <option value="@category.CategoryId" data-type="@category.CategoryType.ToString()">
                                                    @category.CategoryName
                                                </option>
                                            }
                                        }
                                    </select>
                                    <span asp-validation-for="CategoryId" class="text-danger small"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Description -->
                        <div class="mb-3">
                            <label asp-for="Description" class="form-label" id="descriptionLabel"></label>
                            <textarea asp-for="Description" class="form-control border rounded shadow-sm" rows="3"></textarea>
                            <span asp-validation-for="Description" class="text-danger small"></span>
                        </div>

                        <!-- =================== Auto Increase (Step-Up) Section - PREMIUM CARD =================== -->
                        <div id="stepUpContainer" style="display:none;">
                            <div class="mb-3">
                                <div class="form-check form-switch">

                                    <input asp-for="IsStepUpTransaction" class="form-check-input" type="checkbox" id="stepUpToggle" />

                                    <label class="form-check-label fw-semibold" for="stepUpToggle">Enable Auto Increase</label>
                                </div>
                            </div>

                            <!-- Collapsible soft card -->
                            <div id="stepUpCard" class="soft-card collapse-card" aria-hidden="true" style="display:none;">
                                <div class="p-3 rounded-3 shadow-sm bg-white">
                                    <h5 class="mb-3 fw-bold">Auto Increase Settings</h5>

                                    <!-- Step-Up Type -->
                                    <div class="mb-3">
                                        <label class="form-label">Increase Type</label>
                                        <div>
                                            <div class="form-check form-check-inline">
                                                <input class="form-check-input" type="radio" name="stepUpType" id="stepUpTypeAmount" value="Amount" checked>
                                                <label class="form-check-label" for="stepUpTypeAmount">Fixed Amount</label>
                                            </div>
                                            <div class="form-check form-check-inline">
                                                <input class="form-check-input" type="radio" name="stepUpType" id="stepUpTypePercentage" value="Percentage">
                                                <label class="form-check-label" for="stepUpTypePercentage">Percentage</label>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Amount input (bound to ViewModel.StepUpAmount) -->
                                    <div class="mb-3" id="stepUpAmountGroup">
                                        <label asp-for="StepUpAmount" class="form-label"></label>
                                        <input asp-for="StepUpAmount" step="0.01" min="0" class="form-control" id="StepUpAmount" />
                                        <span asp-validation-for="StepUpAmount" class="text-danger small"></span>
                                    </div>

                                    <!-- Percentage input (bound to ViewModel.StepUpPercentage) -->
                                    <div class="mb-3" id="stepUpPercentageGroup" style="display:none;">
                                        <label asp-for="StepUpPercentage" class="form-label"></label>
                                        <input asp-for="StepUpPercentage" step="0.01" min="0" max="100" class="form-control" id="StepUpPercentage" />
                                        <span asp-validation-for="StepUpPercentage" class="text-danger small"></span>
                                    </div>

                                    <!-- Step-Up Frequency (reuses ViewBag.RecurrenceFrequency) -->
                                    <div class="mb-0">
                                        <label asp-for="StepUpFrequeny" class="form-label"></label>
                                        <select asp-for="StepUpFrequeny" asp-items="ViewBag.RecurrenceFrequency" class="form-select" id="stepUpFrequencySelect">
                                            <option value="">-- Select Frequency --</option>
                                        </select>
                                        <span asp-validation-for="StepUpFrequeny" class="text-danger small"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- =================== End Auto Increase Section =================== -->
                        <!-- Submit Button -->
                        <div class="d-grid mt-4">
                            <button type="submit" class="btn btn-primary btn-lg shadow-sm">Save Transaction</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    
    <style>
        /* Adds a smooth transition to the button-cards */
        .btn-check + .btn {
            transition: all 0.15s ease-in-out;
            border-width: 2px; /* Makes the outline a bit stronger */
        }

        /* Soft card style for the Step-Up section (classy & subtle) */
        .soft-card .p-3 {
            background: #fbfcfd; /* subtle off-white */
            border-radius: .5rem;
        }

        /* Smooth collapse using max-height */
        .collapse-card {
            overflow: hidden;
            max-height: 0;
            transition: max-height 320ms cubic-bezier(.4,0,.2,1);
        }

            .collapse-card.show {
                max-height: 800px; /* large enough to contain the content */
            }
    </style>

    <script>
    document.addEventListener("DOMContentLoaded", function () {

        // =================================================================
        // STEP 1: ALL 'const' (ELEMENTS) GO FIRST
        // =================================================================
        
        // --- Timeline / Frequency Logic ---
        const timelineOneTime = document.getElementById("timeline_OneTime");
        const timelineRecurring = document.getElementById("timeline_Recurring");
        const frequencyContainer = document.getElementById("frequencyContainer");
        const frequencySelect = document.getElementById("frequencySelect");

        // --- Territory / Currency toggle ---
        const territorySelect = document.getElementById("territorySelect");
        const currencyContainer = document.getElementById("currencyContainer");
        const currencySelect = currencyContainer.querySelector("select");

        // --- Category filter & description ---
        const typeSelect = document.getElementById('categoryTypeSelect');
        const categorySelect = document.getElementById('categorySelect');
        const descriptionLabel = document.getElementById('descriptionLabel');
        const allCategoryOptions = Array.from(categorySelect.options);

        // --- Step-Up (Auto Increase) Logic ---
        const stepUpContainer = document.getElementById('stepUpContainer');
        const stepUpToggle = document.getElementById('stepUpToggle');
        const stepUpCard = document.getElementById('stepUpCard');
        const stepUpTypeAmount = document.getElementById('stepUpTypeAmount');
        const stepUpTypePercentage = document.getElementById('stepUpTypePercentage');
        const stepUpAmountGroup = document.getElementById('stepUpAmountGroup');
        const stepUpPercentageGroup = document.getElementById('stepUpPercentageGroup');
        const stepUpAmountInput = document.getElementById('StepUpAmount');
        const stepUpPercentageInput = document.getElementById('StepUpPercentage');
        const stepUpFrequencySelect = document.getElementById('stepUpFrequencySelect');


        // =================================================================
        // STEP 2: ALL 'function' DEFINITIONS GO SECOND
        // =================================================================

        function toggleFrequency() {
            if (timelineRecurring.checked) {
                frequencyContainer.style.display = "block";
                frequencySelect.setAttribute("required", "required");
            } else {
                frequencyContainer.style.display = "none";
                frequencySelect.removeAttribute("required");
                frequencySelect.value = ""; // Clear selection if hidden
            }
            // ALSO call step-up visibility update
            updateStepUpAvailability();
        }

        function toggleCurrency() {
            const selectedOptionText = territorySelect.options[territorySelect.selectedIndex].text;

            if (selectedOptionText === "International") {
                currencyContainer.style.display = "block";
                currencySelect.setAttribute("required", "required"); // Add required attribute
            } else {
                currencyContainer.style.display = "none";
                currencySelect.removeAttribute("required"); // Remove required attribute
                currencySelect.value = ""; // Clear selection
            }
        }

        function filterCategories() {
            const selectedType = typeSelect.value;
            const currentCategoryValue = categorySelect.value;

            categorySelect.innerHTML = '<option value="">-- Select Category --</option>';
            allCategoryOptions.forEach(option => {
                if (!option.value) return; // Skip the placeholder
                if (!selectedType || option.getAttribute('data-type') === selectedType) {
                    categorySelect.appendChild(option.cloneNode(true));
                }
            });

            if (categorySelect.querySelector(`option[value='${currentCategoryValue}']`)) {
                categorySelect.value = currentCategoryValue;
            } else {
                categorySelect.value = "";
            }
        }

        function toggleDescriptionRequirement() {
            descriptionLabel.classList.add('required-field');
        }

        function updateStepUpAvailability() {
            if (timelineRecurring.checked) {
                stepUpContainer.style.display = "block";
            } else {
                // Hide + reset
                stepUpContainer.style.display = "none";
                stepUpToggle.checked = false;
                collapseStepUp(false);
                clearStepUpFields();
            }
        }

        function collapseStepUp(show) {
            if (show) {
                stepUpCard.style.display = "block";
                window.requestAnimationFrame(function () {
                    stepUpCard.classList.add('show');
                    stepUpCard.setAttribute('aria-hidden', 'false');
                });
            } else {
                stepUpCard.classList.remove('show');
                stepUpCard.setAttribute('aria-hidden', 'true');
                setTimeout(function () {
                    if (!stepUpCard.classList.contains('show')) stepUpCard.style.display = "none";
                }, 350);
            }
        }

        function clearStepUpFields() {
            if (stepUpAmountInput) {
                stepUpAmountInput.value = "";
                stepUpAmountInput.removeAttribute('required');
            }
            if (stepUpPercentageInput) {
                stepUpPercentageInput.value = "";
                stepUpPercentageInput.removeAttribute('required');
            }
            if (stepUpFrequencySelect) {
                stepUpFrequencySelect.value = "";
                stepUpFrequencySelect.removeAttribute('required');
            }
        }

        function updateStepUpTypeUI() {
            if (stepUpTypePercentage.checked) {
                stepUpAmountGroup.style.display = 'none';
                stepUpPercentageGroup.style.display = 'block';
                if (stepUpToggle.checked) {
                    stepUpPercentageInput && stepUpPercentageInput.setAttribute('required', 'required');
                    stepUpAmountInput && stepUpAmountInput.removeAttribute('required');
                }
            } else {
                stepUpAmountGroup.style.display = 'block';
                stepUpPercentageGroup.style.display = 'none';
                if (stepUpToggle.checked) {
                    stepUpAmountInput && stepUpAmountInput.setAttribute('required', 'required');
                    stepUpPercentageInput && stepUpPercentageInput.removeAttribute('required');
                }
            }
        }


        // =================================================================
        // STEP 3: ALL EVENT LISTENERS GO THIRD
        // =================================================================
        
        timelineOneTime.addEventListener("change", toggleFrequency);
        timelineRecurring.addEventListener("change", toggleFrequency);
        
        territorySelect.addEventListener("change", toggleCurrency);
        
        typeSelect.addEventListener('change', function () {
            filterCategories();
            toggleDescriptionRequirement();
        });

        stepUpToggle.addEventListener('change', function () {
            if (stepUpToggle.checked) {
                collapseStepUp(true);
                // Set required based on current type
                if (stepUpTypeAmount.checked) {
                    stepUpAmountInput && stepUpAmountInput.setAttribute('required', 'required');
                    stepUpPercentageInput && stepUpPercentageInput.removeAttribute('required');
                } else {
                    stepUpPercentageInput && stepUpPercentageInput.setAttribute('required', 'required');
                    stepUpAmountInput && stepUpAmountInput.removeAttribute('required');
                }
                stepUpFrequencySelect && stepUpFrequencySelect.setAttribute('required', 'required');
            } else {
                collapseStepUp(false);
                clearStepUpFields();
            }
        });
        
        stepUpTypeAmount.addEventListener('change', updateStepUpTypeUI);
        stepUpTypePercentage.addEventListener('change', updateStepUpTypeUI);


        // =================================================================
        // STEP 4: ALL INITIAL PAGE-LOAD CALLS GO LAST
        // =================================================================
        
        toggleFrequency(); // This also calls updateStepUpAvailability()
        toggleCurrency();
        filterCategories();
        toggleDescriptionRequirement();

        // Initial step-up UI setup:
        // (updateStepUpAvailability is already called by toggleFrequency)
        if (stepUpToggle.checked) {
            collapseStepUp(true);
            updateStepUpTypeUI();
        } else {
            collapseStepUp(false);
        }
    });
    </script>
}
