@model FinanceManagement.Application.ViewModels.AddTransactionVM

@using FinanceManagement.Core.Enums

@using Microsoft.AspNetCore.Mvc.Rendering



@{

    ViewData["Title"] = "Edit Transaction";



    var categoryTypes = Enum.GetValues(typeof(CategoryType))

                .Cast<CategoryType>()

                .Select(e => new SelectListItem { Value = e.ToString(), Text = e.ToString() })

                .ToList();

}



<div class="container py-5">

    <div class="row justify-content-center">

        <div class="col-md-8 col-lg-6">

            <div class="card shadow-sm rounded-4 border-0">

                <div class="card-body p-4 p-md-5">

                    <h3 class="card-title text-center mb-4 fw-bold">Edit Transaction</h3>



                    <form asp-controller="Transaction" asp-action="Edit" method="post">

                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3" role="alert"></div>



                        <input type="hidden" asp-for="UserId" />

                        <input type="hidden" asp-for="TransactionId" />



                        <div class="row">

                            <!-- Territory Dropdown -->

                            <div class="col-md-6">

                                <div class="mb-3">

                                    <label asp-for="TransactionTerrority" class="form-label required-field"></label>

                                    <select asp-for="TransactionTerrority"
                                                                  asp-items="Html.GetEnumSelectList<TransactionTerrority>()"
                                                                  class="form-select"
                                                                  id="territorySelect">
                                    </select>

                                    <span asp-validation-for="TransactionTerrority" class="text-danger small"></span>

                                </div>

                            </div>



                            <!-- Currency Dropdown (shown only for International) -->

                            <div class="col-md-6" id="currencyContainer" style="display:none;">

                                <div class="mb-3">

                                    <label asp-for="TransactionCurrency" class="form-label required-field"></label>

                                    <select asp-for="TransactionCurrency"
                                                                  class="form-select"
                                                                  asp-items="ViewBag.Available">

                                        <option value="">-- Select Currency --</option>

                                    </select>

                                    <span asp-validation-for="TransactionCurrency" class="text-danger small"></span>

                                </div>

                            </div>

                        </div>



                        <!-- Amount -->

                        <div class="mb-3">

                            <label asp-for="Amount" class="form-label required-field"></label>

                            <input asp-for="Amount" class="form-control" />

                            <span asp-validation-for="Amount" class="text-danger small"></span>

                        </div>



                        <!-- Transaction Date -->

                        <div class="mb-3">

                            <label asp-for="TransactionDate" class="form-label required-field"></label>

                            <input asp-for="TransactionDate" type="date" class="form-control"
                                                     max="@DateTime.Today.ToString("yyyy-MM-dd")" />

                            <span asp-validation-for="TransactionDate" class="text-danger small"></span>

                        </div>



                        <!-- Category Type -->

                        <div class="mb-3">

                            <label asp-for="CategoryType" class="form-label required-field"></label>

                            <select asp-for="CategoryType" class="form-select" id="categoryTypeDropdown" asp-items="categoryTypes"></select>

                            <span asp-validation-for="CategoryType" class="text-danger small"></span>

                        </div>



                        <!-- Category Selection -->

                        <div class="mb-3">

                            <label asp-for="CategoryId" class="form-label required-field"></label>

                            <select asp-for="CategoryId" class="form-select" id="categorySelect">

                                <option value="">-- Select Category --</option>

                                @if (Model.Categories != null && Model.Categories.Any())

                                {

                                    foreach (var category in Model.Categories)

                                    {

                                        <option value="@category.CategoryId"
                                                                        data-type="@category.CategoryType"
                                                                        selected="@(Model.CategoryId == category.CategoryId ? "selected" : null)">

                                            @category.CategoryName

                                        </option>

                                    }

                                }

                            </select>

                            <span asp-validation-for="CategoryId" class="text-danger small"></span>

                        </div>



                        <!-- Description -->

                        <div class="mb-3">

                            <label asp-for="Description" class="form-label" id="descriptionLabel"></label>

                            <textarea asp-for="Description" class="form-control"></textarea>

                            <span asp-validation-for="Description" class="text-danger small"></span>

                        </div>



                        <!-- Submit Button -->

                        <div class="d-grid mt-4">

                            <button type="submit" class="btn btn-primary btn-lg">Save Changes</button>

                        </div>

                    </form>

                </div>

            </div>

        </div>

    </div>

</div>



@section Scripts {

    <partial name="_ValidationScriptsPartial" />



    <script>

        document.addEventListener("DOMContentLoaded", function () {

            // --- Territory / Currency ---

            const territorySelect = document.getElementById("territorySelect");

            const currencyContainer = document.getElementById("currencyContainer");



            function updateCurrencyVisibility() {

                const selectedOptionText = territorySelect.options[territorySelect.selectedIndex].text;

                if (selectedOptionText === "International") {

                    currencyContainer.style.display = "block";

                } else {

                    currencyContainer.style.display = "none";

                }

            }



            updateCurrencyVisibility();

            territorySelect.addEventListener("change", updateCurrencyVisibility);



            // --- Category Filter ---

            const typeSelect = document.getElementById('categoryTypeDropdown');

            const categorySelect = document.getElementById('categorySelect');

            const descriptionLabel = document.getElementById('descriptionLabel');



            const allCategoryOptions = Array.from(categorySelect.options);



            function filterCategories() {

                const selectedType = typeSelect.value;

                const currentCategoryValue = categorySelect.value;



                categorySelect.innerHTML = '<option value="">-- Select Category --</option>';



                allCategoryOptions.forEach(option => {

                    if (!option.value) return;

                    if (!selectedType || option.getAttribute('data-type') === selectedType) {

                        categorySelect.appendChild(option.cloneNode(true));

                    }

                });



                if (categorySelect.querySelector(`option[value='${currentCategoryValue}']`)) {

                    categorySelect.value = currentCategoryValue;

                } else {

                    categorySelect.value = "";

                }

            }



            function toggleDescriptionRequirement() {

                if (typeSelect.value === 'Expense') {

                    descriptionLabel.classList.add('required-field');

                } else {

                    descriptionLabel.classList.remove('required-field');

                }

            }



            typeSelect.addEventListener('change', function () {

                filterCategories();

                toggleDescriptionRequirement();

            });



            // Initial setup

            filterCategories();

            toggleDescriptionRequirement();

        });

    </script>

}